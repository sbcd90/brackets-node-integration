{
  "name": "file-set",
  "version": "0.2.1",
  "description": "Expands file patterns, returning the matched and unmatched files and directories.",
  "main": "lib/file-set.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/75lb/file-set"
  },
  "scripts": {
    "test": "tape test/*.js",
    "docs": "jsdoc2md -t jsdoc2md/README.hbs lib/file-set.js > README.md; echo "
  },
  "author": {
    "name": "Lloyd Brookes"
  },
  "devDependencies": {
    "jsdoc-to-markdown": "^0.2",
    "tape": "^2.13.2"
  },
  "dependencies": {
    "array-tools": "^1.0.4",
    "glob": "^4.0.2"
  },
  "readme": "[![view on npm](http://img.shields.io/npm/v/file-set.svg)](https://www.npmjs.org/package/file-set)\n[![npm module downloads per month](http://img.shields.io/npm/dm/file-set.svg)](https://www.npmjs.org/package/file-set)\n[![Build Status](https://travis-ci.org/75lb/file-set.svg?branch=master)](https://travis-ci.org/75lb/file-set)\n[![Dependency Status](https://david-dm.org/75lb/file-set.svg)](https://david-dm.org/75lb/file-set)\n\n#file-set\nExports a contructor taking a list of file patterns as input, returning a `file-set` instance containing the expanded patterns split into separate lists of `files`, `dirs` and `notExisting`.\n\n**Example**  \n```js\nvar fileSet = require(\"file-set\");\n```\n\n\n\n##Install\n```sh\n$ npm install file-set --save\n```\n\n##Usage\n```js\n> var fileSet = require(\"file-set\");\n> var ls = fileSet([ \"*\", \"not/existing/*\" ])\n{ list:\n   [ { path: 'README.md', type: 1 },\n     { path: 'jsdoc2md', type: 2 },\n     { path: 'lib', type: 2 },\n     { path: 'node_modules', type: 2 },\n     { path: 'package.json', type: 1 },\n     { path: 'test', type: 2 },\n     { path: 'not/existing/*', type: 0 } ],\n  files: [ 'README.md', 'package.json' ],\n  dirs:\n   [ 'jsdoc2md',\n     'lib',\n     'node_modules',\n     'test' ],\n  notExisting: [ 'not/existing/*' ] }\n```\n\n#API\n<a name=\"module_file-set\"></a>\n##class: FileSet ‚èè\nExpands file patterns, returning the matched and unmatched files and directories\n\n**Members**\n\n* [new FileSet(patternList)](#module_file-set)\n* [fileSet.list](#module_file-set#list)\n* [fileSet.files](#module_file-set#files)\n* [fileSet.dirs](#module_file-set#dirs)\n* [fileSet.notExisting](#module_file-set#notExisting)\n* [fileSet.add(files)](#module_file-set#add)\n* [enum: FileSet.eFileType](#module_file-set.eFileType)\n\n<a name=\"module_file-set\"></a>\n###new FileSet(patternList)\n**Params**\n\n- patternList `string` | `Array.<string>` - A pattern, or array of patterns to expand\n\n<a name=\"module_file-set#list\"></a>\n###fileSet.list\nThe full list of unique paths found, and not found.\n\n**Type**: `Array.<string>`  \n<a name=\"module_file-set#files\"></a>\n###fileSet.files\nThe existing files found\n\n**Type**: `Array.<string>`  \n<a name=\"module_file-set#dirs\"></a>\n###fileSet.dirs\nThe existing directories found\n\n**Type**: `Array.<string>`  \n<a name=\"module_file-set#notExisting\"></a>\n###fileSet.notExisting\nPaths which were not found\n\n**Type**: `Array.<string>`  \n<a name=\"module_file-set#add\"></a>\n###fileSet.add(files)\nadd file patterns to the set\n\n**Params**\n\n- files `string` | `Array.<string>` - A pattern, or array of patterns to expand\n\n<a name=\"module_file-set.eFileType\"></a>\n###enum: FileSet.eFileType\nEnum for the `type` value of each record in `fileSet.list`\n\n**Type**: `number`  \n**Properties**: `NOEXIST`, `FILE`, `DIR`  \n**Read only**: true  \n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/75lb/file-set/issues"
  },
  "homepage": "https://github.com/75lb/file-set",
  "_id": "file-set@0.2.1",
  "_from": "file-set@~0.2.1"
}
